TESS India Content
==================

Quick version
-------------

    ./generate_archive.sh
    rm -rf SiteArchive/generated_content/optimized
    ./archive_optimize/archive_optimize.py SiteArchive/generated_content/www.open.edu SiteArchive/generated_content/optimized
    ./generate_site.sh
    fab copy -H 10.0.156.125

Generating the TESS India site archive
--------------------------------------

From the main directory, run `./generate_archive.sh`. This will generate a directory called `www.open.edu` which will contain the TESS site content

You can also run `./generate_archive.sh small` to just get one web page plus it's videos and dependencies.  It gets around 200 MB, so is handy for creating a small archive and testing the various scripts.


Optimize archive copy for mobile viewing
----------------------------------------

First make sure that you have Python packages listed in `archive_optimize/requirements.txt` installed and that you don't have the `python-magic` debian package installed.  ([see this for more about the conflicts](http://stackoverflow.com/a/16203777/3189)).

From the main directory, run 
`archive_optimize/archive_optimize.py www.open.edu <destination directory>`
to make a processed copy of directory www.open.edu. Destination directory
must not exist or the script will terminate.

What the script does is:
* make a copy of all files
* add in the tess-india favicon in `tessindia/favicon.png`
* add mobile friendly CSS to pages
* remove inline styles from pages
* replaces embedded YouTube videos with HTML5 video player pointing to local
  copy of video


Generate the static HTML
------------------------

Run `./generate_site.sh` to convert markdown to HTML in ./WebContent/


Copying archive to PI for serving
---------------------------------

Install Fabric if you don't have it yet. Afterwards run
`fab copy -H <pi_address>` where <pi_address> is hostname or IP address of PI.

On successful completion you should find the content at http://<ip_address>.



OLD
===

Or maybe future, but at any rate not now.


Build a zim archive
-------------------

# Install [zimwriterfs](http://sourceforge.net/p/kiwix/other/ci/master/tree/zimwriterfs/)

> "zimwriterfs is a console tool to create ZIM files from a localy stored
> directory containing a "self-sufficient" HTML content (with pictures,
> javascript, stylesheets). The result will contain all the files of the local
> directory compressed and merged in the ZIM file. Nothing more, nothing less.
> zimwriterfs works, for now only, on POSIX compatible systems. You simply need
> to compile it and run it. The software does not need a lot of resources, but if
> you create a pretty big ZIM files, then it could take a while to complete"
> http://sourceforge.net/p/kiwix/other/ci/master/tree/zimwriterfs/

Install dependencies:

    sudo apt-get install libmagic-dev liblzma-dev autoconf libtool libzim-dev


    git clone git://git.code.sf.net/p/kiwix/other kiwix-other 
    cd kiwix-other/zimwriterfs
    ./autogen.sh
    autoreconf --force --install
    ./configure
    make


# Make an archive from the optimised content

Here's the command I used.  I have my optimised content 
in `optimised` (destination directory for archive_optimize above).

    {path to zimwriterfs}/zimwriterfs \
        --welcome='openlearnworks/course/view.php?id=1911.html' \
        --favicon=tessindia/favicon.png \
        --language=eng \
        --title=TESSIndia \
        --description='Tess India' \
        --creator=Aptivate \
        --publisher='The Open University' \
        optimised tessindia.zim
